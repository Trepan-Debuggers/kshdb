(nexting.sh:5):
p
+set basename on
Show short filenames (the basename) in debug output is on.
+# Make sure autostep is off for next text
+set different off
Show stepping forces a new line is off.
+show different
Show stepping forces a new line is off.
+next 
0
===
(nexting.sh:6):
p
+backtrace 1
->0 in file `nexting.sh' at line 6
+next 
0
===
(nexting.sh:6):
x=6
+backtrace 1
->0 in file `nexting.sh' at line 6
+# Test that next+ skips multiple statements
+next+ 
(nexting.sh:7):
p
+backtrace 1
->0 in file `nexting.sh' at line 7
+# Same thing - but should stop at 2nd statement in line
+next 
0
===
(nexting.sh:7):
x=7
+backtrace 1
->0 in file `nexting.sh' at line 7
+next 
(nexting.sh:8):
p
+backtrace 1
->0 in file `nexting.sh' at line 8
+# Now check with set different on
+set different on
Show stepping forces a new line is on.
+show different
Show stepping forces a new line is on.
+next 
0
===
(nexting.sh:9):
p
+backtrace 1
->0 in file `nexting.sh' at line 9
+# Override different
+next- 
0
===
(nexting.sh:9):
x=9
+backtrace 1
->0 in file `nexting.sh' at line 9
+next- 
(nexting.sh:10):
p
+backtrace 1
->0 in file `nexting.sh' at line 10
+# A null command should use the last next
+next- 
0
===
(nexting.sh:10):
x=10
+backtrace 1
->0 in file `nexting.sh' at line 10
+next- 
(nexting.sh:11):
p
+next 
0
===
(nexting.sh:12):
p
+backtrace 1
->0 in file `nexting.sh' at line 12
+# Try a null command the other way
+next+ 
0
===
(nexting.sh:13):
p
+backtrace 1
->0 in file `nexting.sh' at line 13
+next+ 
0
===
(nexting.sh:14):
x=14
+backtrace 1
->0 in file `nexting.sh' at line 14
+quit 
kshdb: That's all, folks...
